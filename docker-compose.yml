version: '3.8'

services:
  postgres-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: sentinel
      POSTGRES_PASSWORD: sentinel123
      POSTGRES_DB: sentinel_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "sentinel"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis-broker:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      POSTGRES_USER: sentinel
      POSTGRES_PASSWORD: sentinel123
      POSTGRES_DB: sentinel_db
      POSTGRES_HOST: postgres-db
      POSTGRES_PORT: 5432
      REDIS_HOST: redis-broker
      REDIS_PORT: 6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      VIRUSTOTAL_API_KEY: ${VIRUSTOTAL_API_KEY}
    depends_on:
      postgres-db:
        condition: service_healthy
      redis-broker:
        condition: service_healthy

  worker:
    build: ./worker
    environment:
      POSTGRES_USER: sentinel
      POSTGRES_PASSWORD: sentinel123
      POSTGRES_DB: sentinel_db
      POSTGRES_HOST: postgres-db
      POSTGRES_PORT: 5432
      REDIS_HOST: redis-broker
      REDIS_PORT: 6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      VIRUSTOTAL_API_KEY: ${VIRUSTOTAL_API_KEY}
    depends_on:
      - backend

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    depends_on:
      - backend

volumes:
  postgres_data:
